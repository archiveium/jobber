name: Build Docker Image

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  build:
    name: Build
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: Login to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Import App Version
      #   id: import-app-version
      #   shell: bash
      #   run: echo "APP_VERSION=`cat VERSION`" >> $GITHUB_ENV
      # - name: Build
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     platforms: |-
      #         linux/amd64
      #         linux/arm64
      #     file: ./docker/prod/Dockerfile
      #     push: true
      #     tags: archiveium/archiveium:${{ env.APP_VERSION }},archiveium/archiveium:latest
  # build:
  #   name: Build Docker Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Import App Version
  #       id: import-app-version
  #       shell: bash
  #       run: echo "APP_VERSION=`cat VERSION`" >> $GITHUB_ENV
  #     - name: Build
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         platforms: |-
  #             linux/amd64
  #             linux/arm64
  #         file: ./docker/prod/Dockerfile
  #         push: true
  #         tags: archiveium/archiveium:${{ env.APP_VERSION }},archiveium/archiveium:latest